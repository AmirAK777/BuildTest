import { patchState, signalStore, withHooks, withMethods, withState, } from '@ngrx/signals';
import { rxMethod } from '@ngrx/signals/rxjs-interop';
import { concatMap, pipe, tap } from 'rxjs';
import { tapResponse } from '@ngrx/operators';
import { OffersInfrastructure } from '../services/offers.infrastructure';
import { inject } from '@angular/core';
const initialValue = {
    offers: null,
    isLoading: false,
};
export const OffersStore = signalStore({ providedIn: 'root' }, withState(initialValue), withMethods((store, infra = inject(OffersInfrastructure)) => ({
    getOffers: rxMethod(pipe(tap(() => patchState(store, { isLoading: true })), concatMap(() => {
        return infra.getOffers().pipe(tapResponse({
            next: (offers) => patchState(store, { isLoading: false, offers }),
            error: () => patchState(store, { isLoading: false }),
        }));
    }))),
})), withHooks({
    onInit(store) {
        store.getOffers();
    },
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9vZmZlci1wYXltZW50cy9zcmMvbGliL3N0b3JlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFNBQVMsRUFDVCxXQUFXLEVBQ1gsU0FBUyxHQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDNUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFRdkMsTUFBTSxZQUFZLEdBQWdCO0lBQ2hDLE1BQU0sRUFBRSxJQUFJO0lBQ1osU0FBUyxFQUFFLEtBQUs7Q0FDakIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxXQUFXLENBQ3BDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxFQUN0QixTQUFTLENBQUMsWUFBWSxDQUFDLEVBQ3ZCLFdBQVcsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDNUQsU0FBUyxFQUFFLFFBQVEsQ0FDakIsSUFBSSxDQUNGLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsRUFDakQsU0FBUyxDQUFDLEdBQUcsRUFBRTtRQUNiLE9BQU8sS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FDM0IsV0FBVyxDQUFDO1lBQ1YsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQztZQUNqRSxLQUFLLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsQ0FBQztTQUNyRCxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUNILENBQ0Y7Q0FDRixDQUFDLENBQUMsRUFDSCxTQUFTLENBQUM7SUFDUixNQUFNLENBQUMsS0FBSztRQUNWLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNwQixDQUFDO0NBQ0YsQ0FBQyxDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHBhdGNoU3RhdGUsXHJcbiAgc2lnbmFsU3RvcmUsXHJcbiAgd2l0aEhvb2tzLFxyXG4gIHdpdGhNZXRob2RzLFxyXG4gIHdpdGhTdGF0ZSxcclxufSBmcm9tICdAbmdyeC9zaWduYWxzJztcclxuaW1wb3J0IHsgcnhNZXRob2QgfSBmcm9tICdAbmdyeC9zaWduYWxzL3J4anMtaW50ZXJvcCc7XHJcbmltcG9ydCB7IGNvbmNhdE1hcCwgcGlwZSwgdGFwIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IHRhcFJlc3BvbnNlIH0gZnJvbSAnQG5ncngvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgT2ZmZXJzSW5mcmFzdHJ1Y3R1cmUgfSBmcm9tICcuLi9zZXJ2aWNlcy9vZmZlcnMuaW5mcmFzdHJ1Y3R1cmUnO1xyXG5pbXBvcnQgeyBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2ZmZXJzIH0gZnJvbSAnLi4vbW9kZWxzL29mZmVycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9mZmVyc1N0YXRlIHtcclxuICBvZmZlcnM6IE9mZmVycyB8IHVuZGVmaW5lZCB8IG51bGw7XHJcbiAgaXNMb2FkaW5nOiBib29sZWFuO1xyXG59XHJcblxyXG5jb25zdCBpbml0aWFsVmFsdWU6IE9mZmVyc1N0YXRlID0ge1xyXG4gIG9mZmVyczogbnVsbCxcclxuICBpc0xvYWRpbmc6IGZhbHNlLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IE9mZmVyc1N0b3JlID0gc2lnbmFsU3RvcmUoXHJcbiAgeyBwcm92aWRlZEluOiAncm9vdCcgfSxcclxuICB3aXRoU3RhdGUoaW5pdGlhbFZhbHVlKSxcclxuICB3aXRoTWV0aG9kcygoc3RvcmUsIGluZnJhID0gaW5qZWN0KE9mZmVyc0luZnJhc3RydWN0dXJlKSkgPT4gKHtcclxuICAgIGdldE9mZmVyczogcnhNZXRob2Q8dm9pZD4oXHJcbiAgICAgIHBpcGUoXHJcbiAgICAgICAgdGFwKCgpID0+IHBhdGNoU3RhdGUoc3RvcmUsIHsgaXNMb2FkaW5nOiB0cnVlIH0pKSxcclxuICAgICAgICBjb25jYXRNYXAoKCkgPT4ge1xyXG4gICAgICAgICAgcmV0dXJuIGluZnJhLmdldE9mZmVycygpLnBpcGUoXHJcbiAgICAgICAgICAgIHRhcFJlc3BvbnNlKHtcclxuICAgICAgICAgICAgICBuZXh0OiAob2ZmZXJzKSA9PiBwYXRjaFN0YXRlKHN0b3JlLCB7IGlzTG9hZGluZzogZmFsc2UsIG9mZmVycyB9KSxcclxuICAgICAgICAgICAgICBlcnJvcjogKCkgPT4gcGF0Y2hTdGF0ZShzdG9yZSwgeyBpc0xvYWRpbmc6IGZhbHNlIH0pLFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9KVxyXG4gICAgICApXHJcbiAgICApLFxyXG4gIH0pKSxcclxuICB3aXRoSG9va3Moe1xyXG4gICAgb25Jbml0KHN0b3JlKSB7XHJcbiAgICAgIHN0b3JlLmdldE9mZmVycygpO1xyXG4gICAgfSxcclxuICB9KVxyXG4pO1xyXG4iXX0=